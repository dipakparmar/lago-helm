apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}-db'
  labels:
    app.kubernetes.io/component: db
    app.kubernetes.io/name: '{{ .Chart.Name }}'
    app.kubernetes.io/instance: '{{ .Release.Name }}'

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: db
      app.kubernetes.io/instance: '{{ .Release.Name }}'
  template:
    metadata:
      labels:
        app.kubernetes.io/component: db
        app.kubernetes.io/instance: '{{ .Release.Name }}'
    spec:
      containers:
        - name: db
          image: '{{ .Values.db.repository.image }}{{ if ne .Values.db.repository.tag "" }}:{{ .Values.db.repository.tag }}{{ end }}'
          ports:
            - name: db
              containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: '{{ tpl .Values.db.environment.POSTGRES_PASSWORD . }}'
            - name: PGDATA
              value: '{{ tpl .Values.db.environment.PGDATA . }}'
            - name: POSTGRES_DB
              value: '{{ tpl .Values.db.environment.POSTGRES_DB . }}'
            - name: POSTGRES_USER
              value: '{{ tpl .Values.db.environment.POSTGRES_USER . }}'
          volumeMounts:
            - mountPath: /data/postgres
              name: vol-z4g79e
              subPath: data
      volumes:
      - name: vol-z4g79e
        persistentVolumeClaim:
          claimName: '{{ .Release.Name }}-lago-postgres-data'



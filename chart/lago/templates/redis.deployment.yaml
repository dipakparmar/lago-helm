apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}-redis'
  labels:
    app.kubernetes.io/component: redis
    app.kubernetes.io/name: '{{ .Chart.Name }}'
    app.kubernetes.io/instance: '{{ .Release.Name }}'

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/instance: '{{ .Release.Name }}'
  template:
    metadata:
      labels:
        app.kubernetes.io/component: redis
        app.kubernetes.io/instance: '{{ .Release.Name }}'
    spec:
      containers:
        - name: redis
          image: '{{ .Values.redis.repository.image }}{{ if ne .Values.redis.repository.tag "" }}:{{ .Values.redis.repository.tag }}{{ end }}'
          ports:
            - name: redis
              containerPort: 6379
          volumeMounts:
          - mountPath: /data
            name: vol-zko9y
      volumes:
      - name: vol-zko9y
        persistentVolumeClaim:
          claimName: '{{ .Release.Name }}-lago-redis-data'


